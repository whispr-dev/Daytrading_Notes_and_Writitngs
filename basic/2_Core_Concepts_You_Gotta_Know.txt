📊 The Beginner's Blueprint to Day Trading with Python
Part 2: Core Concepts You Gotta Know
✦ Understanding the Language of Price
Before we look at code, you need to speak the language of the markets — and that language is price action.

Let’s break it down:

🕯️ Candlestick Charts
A candlestick is a visual snapshot of price movement during a specific period (1 minute, 1 hour, 1 day…).

Each candle shows:

Open price (where it started)

Close price (where it ended)

High price (highest point reached)

Low price (lowest point)

The candle has:

A body (the box between open and close)

A wick (the line above and below the body showing high/low)

A color (green if it closed higher than it opened, red otherwise)

This is what a single candle tells you — and when stacked together, they tell stories of momentum, indecision, reversals.

🧠 Let's Plot Some Candles in Python
Save this as:
📄 core_concepts/candlestick_plot.py

python
Copy
Edit
import yfinance as yf
import plotly.graph_objects as go

# Download sample data (1-day candlesticks)
ticker = 'AAPL'
data = yf.download(ticker, start='2024-04-01', end='2024-04-10', interval='1d')

# Create candlestick chart
fig = go.Figure(data=[go.Candlestick(
    x=data.index,
    open=data['Open'],
    high=data['High'],
    low=data['Low'],
    close=data['Close'],
    increasing_line_color='green',
    decreasing_line_color='red'
)])

fig.update_layout(title=f"{ticker} - Daily Candlestick Chart", xaxis_rangeslider_visible=False)
fig.show()
📐 Indicators That Every Trader Uses
1. EMA (Exponential Moving Average)
Smooths price by averaging over time. Great for trend-following.

EMA(9) = fast

EMA(50) = medium

EMA(200) = long-term

A buy signal might be: "Price crosses above EMA(9)"

2. RSI (Relative Strength Index)
Momentum indicator, 0–100.

Above 70 → Overbought

Below 30 → Oversold

3. MACD (Moving Average Convergence Divergence)
Shows momentum change. It uses:

A fast EMA (e.g. 12)

A slow EMA (e.g. 26)

The difference is the MACD line

A signal EMA (e.g. 9 of the MACD) plots the signal line

Crossovers give buy/sell signals.

🧪 Code: EMA, RSI, and MACD Overlay
Save this as:
📄 core_concepts/indicator_overlay.py

python
Copy
Edit
import yfinance as yf
import pandas as pd
import plotly.graph_objects as go

# Download price data
data = yf.download("AAPL", start="2024-01-01", end="2024-04-01", interval="1d")

# EMA calculations
data['EMA9'] = data['Close'].ewm(span=9).mean()
data['EMA21'] = data['Close'].ewm(span=21).mean()

# RSI Calculation (14-period)
delta = data['Close'].diff()
gain = delta.clip(lower=0)
loss = -delta.clip(upper=0)
avg_gain = gain.rolling(14).mean()
avg_loss = loss.rolling(14).mean()
rs = avg_gain / avg_loss
data['RSI'] = 100 - (100 / (1 + rs))

# MACD calculation
ema12 = data['Close'].ewm(span=12).mean()
ema26 = data['Close'].ewm(span=26).mean()
data['MACD'] = ema12 - ema26
data['Signal'] = data['MACD'].ewm(span=9).mean()

# Candlestick plot
fig = go.Figure()

fig.add_trace(go.Candlestick(
    x=data.index,
    open=data['Open'],
    high=data['High'],
    low=data['Low'],
    close=data['Close'],
    name='Price'
))

fig.add_trace(go.Scatter(x=data.index, y=data['EMA9'], mode='lines', name='EMA 9'))
fig.add_trace(go.Scatter(x=data.index, y=data['EMA21'], mode='lines', name='EMA 21'))

fig.update_layout(title='AAPL with EMA Overlay', xaxis_rangeslider_visible=False)
fig.show()
📏 Other Critical Concepts
✦ Support and Resistance
Support = price level where buying pressure outweighs selling (bounces up)

Resistance = price level where selling pressure outweighs buying (bounces down)

You don’t need to hardcode these — indicators like Bollinger Bands and pivot points help detect them.

✦ Volume
Think of volume as how loud the market is:

High volume = strong conviction

Low volume = indecision

Volume confirms breakouts, trend strength, or lack of interest.

✦ Volatility
Measured by ATR (Average True Range) or simply by % range.

More volatility = more opportunity… and more risk.

✦ Risk:Reward Ratio
You want setups where you risk 1 unit to potentially gain 2 or more.

A common beginner mistake: “high win rate, low reward” → not sustainable

A better approach: “medium win rate, high reward” → long-term edge

📉 Signals vs. Noise
A trading signal should:

Be backed by math or logic (not “gut”)

Be repeatable and testable

Have a clear entry/exit and risk

We'll start crafting strategies using combinations of indicators in the next parts.

🧠 Thought Experiment: Buy AAPL When RSI < 30
Here’s a dead-simple strategy:

text
Copy
Edit
IF RSI < 30:
    BUY
IF RSI > 70:
    SELL
It might work, it might not. You won’t know until you backtest it.
That's the key difference between gambling and quantitative trading.

✦ Coming Up Next: Tools and Libraries
In Part 3, we’ll explore:

The exact Python libraries to install

What each one does

How to set up your system

Your first data pull from Yahoo Finance

And your first trading dashboard (Streamlit!)